services:
  mongodb:
    image: mongo:7
    container_name: udm-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      5g-core:
        aliases:
          - mongodb
          - mongo

  custom-udm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: custom-udm
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/udm
      - NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
    networks:
      5g-core:
        ipv4_address: 10.100.200.10
    command: npm run dev

  open5gs-nrf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-nrf
    restart: unless-stopped
    command: open5gs-nrfd -c /etc/open5gs/nrf.yaml
    volumes:
      - ./test-config/open5gs/nrf.yaml:/etc/open5gs/nrf.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.11

  # SCP is optional and not needed for basic testing
  # open5gs-scp:
  #   image: gradiant/open5gs:2.7.2
  #   container_name: open5gs-scp
  #   command: open5gs-scpd -c /etc/open5gs/scp.yaml
  #   depends_on:
  #     - open5gs-nrf
  #   volumes:
  #     - ./test-config/open5gs/scp.yaml:/etc/open5gs/scp.yaml
  #   networks:
  #     5g-core:
  #       ipv4_address: 10.100.200.12

  open5gs-udr:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-udr
    restart: unless-stopped
    command: open5gs-udrd -c /etc/open5gs/udr.yaml
    depends_on:
      - mongodb
      - open5gs-nrf
    volumes:
      - ./test-config/open5gs/udr.yaml:/etc/open5gs/udr.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.13

  open5gs-ausf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-ausf
    restart: unless-stopped
    command: open5gs-ausfd -c /etc/open5gs/ausf.yaml
    depends_on:
      - open5gs-nrf
      - custom-udm
    volumes:
      - ./test-config/open5gs/ausf.yaml:/etc/open5gs/ausf.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.14

  open5gs-amf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-amf
    restart: unless-stopped
    command: open5gs-amfd -c /etc/open5gs/amf.yaml
    depends_on:
      - open5gs-nrf
      - open5gs-ausf
      - custom-udm
    volumes:
      - ./test-config/open5gs/amf.yaml:/etc/open5gs/amf.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.15

  open5gs-smf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-smf
    restart: unless-stopped
    command: open5gs-smfd -c /etc/open5gs/smf.yaml
    depends_on:
      - open5gs-nrf
      - custom-udm
    volumes:
      - ./test-config/open5gs/smf.yaml:/etc/open5gs/smf.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.16

  open5gs-upf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-upf
    restart: unless-stopped
    command: open5gs-upfd -c /etc/open5gs/upf.yaml
    depends_on:
      - open5gs-smf
    volumes:
      - ./test-config/open5gs/upf.yaml:/etc/open5gs/upf.yaml
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1
    networks:
      5g-core:
        ipv4_address: 10.100.200.17

  open5gs-pcf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-pcf
    restart: unless-stopped
    command: open5gs-pcfd -c /etc/open5gs/pcf.yaml
    depends_on:
      - open5gs-nrf
      - mongodb
    volumes:
      - ./test-config/open5gs/pcf.yaml:/etc/open5gs/pcf.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.18

  open5gs-bsf:
    image: gradiant/open5gs:2.7.2
    container_name: open5gs-bsf
    restart: unless-stopped
    command: open5gs-bsfd -c /etc/open5gs/bsf.yaml
    depends_on:
      - open5gs-nrf
    volumes:
      - ./test-config/open5gs/bsf.yaml:/etc/open5gs/bsf.yaml
    networks:
      5g-core:
        ipv4_address: 10.100.200.19

  ueransim-gnb:
    build:
      context: ./test-config/ueransim
      dockerfile: Dockerfile.ueransim
    container_name: ueransim-gnb
    restart: unless-stopped
    depends_on:
      - open5gs-amf
      - open5gs-upf
    volumes:
      - ./test-config/ueransim/gnb.yaml:/config/gnb.yaml
    command: nr-gnb -c /config/gnb.yaml
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    networks:
      5g-core:
        ipv4_address: 10.100.200.20

  ueransim-ue:
    build:
      context: ./test-config/ueransim
      dockerfile: Dockerfile.ueransim
    container_name: ueransim-ue
    restart: unless-stopped
    depends_on:
      - ueransim-gnb
    volumes:
      - ./test-config/ueransim/ue.yaml:/config/ue.yaml
    command: nr-ue -c /config/ue.yaml
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    networks:
      5g-core:
        ipv4_address: 10.100.200.21
    stdin_open: true
    tty: true

networks:
  5g-core:
    driver: bridge
    ipam:
      config:
        - subnet: 10.100.200.0/24

volumes:
  mongodb_data:


